// # 開発（SQLite）でスキーマ反映（履歴不要なら db push）
// cd backend

// Prisma Client を生成
// npx prisma generate --schema=prisma/schema.sqlite.prisma

// マイグレーションを作成・適用するとき（履歴を残す）
// npx prisma migrate dev --schema=prisma/schema.sqlite.prisma --name init

// Prisma Studio を開くとき
// npx prisma studio --schema=prisma/schema.sqlite.prisma

// Prisma schema - ローカル開発は SQLite を想定。production は下のコメントを有効化して DATABASE_URL を本番値にする。

// datasource: ローカル（SQLite）
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") // 例: file:./prisma/dev.db (backend/.env に配置推奨)
}

//output = "../generated/prisma" の意味
//Prisma の generator 設定で指定した出力先
//schema.prisma を基準にして相対パスで指定され、Prisma Client の生成物（JS/TS）がそのディレクトリに書き出される
//例えば schema.prisma が schema.prisma にあるなら、生成先は backend/generated/prisma になる
generator client {
  provider = "prisma-client-js"
   output   = "../backend/prisma/generated/prisma/sqlite"
}

model StudyRecord {
  id         String   @id @default(uuid())
  title      String
  time       Int
  created_at DateTime @default(now())
}




// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

